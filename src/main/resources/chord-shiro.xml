<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">
    <!-- Shiro Filter -->

    <!--cas-->
    <!--<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">-->
        <!--<property name="failureUrl" value="/error.jsp"/>-->
    <!--</bean>-->

    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <!--<property name="securityManager" ref="securityManager"/>-->
        <!--<property name="loginUrl" value="https://sso2.tuniu.org/cas?service=http://127.0.0.1/nexus/view/tn_food/shiro-cas" />-->
        <!--<property name="filters">-->
            <!--<map>-->
                <!--<entry key="casFilter" value-ref="casFilter"/>-->
                <!--<entry key="logout" value-ref="logout" />-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--/shiro-cas = casFilter-->
                <!--/api/** = roles[ROLE_USER]-->
                <!--/** = anon-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="casRealm" class="org.apache.shiro.cas.CasRealm">-->
        <!--<property name="defaultRoles" value="ROLE_USER"/>-->
        <!--<property name="casServerUrlPrefix" value="https://sso2.tuniu.org/cas/"/>-->
        <!--<property name="casService" value="http://127.0.0.1/nexus/view/tn_food/shiro-cas"/>-->
    <!--</bean>-->
    <!--<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--<property name="realm" ref="casRealm"/>-->
        <!--<property name="subjectFactory" ref="casSubjectFactory"/>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
        <!--<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>-->
        <!--<property name="arguments" ref="securityManager"/>-->
    <!--</bean>-->

    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">-->
        <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->
    <!--<bean  class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager" />-->
    <!--</bean>-->


    <!--<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">-->
        <!--<property name="redirectUrl" value="https://sso2.tuniu.org/cas/logout?service=http://localhost:8082/cas-shiro-demo/api/logout"/>-->
    <!--</bean>-->

<!--</beans>-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/nexus/login"/>
        <property name="successUrl" value="/nexus/view/tn_food/"/>
        <property name="unauthorizedUrl" value="/nexus/login"/>
        <property name="filterChainDefinitions">
            <value>
                /nexus/login = anon
                /header/** = anon
                /public/** = anon
                /role/edit/* = perms[role:edit]
                /role/save = perms[role:edit]
                /role/list = perms[role:view]
                /** = authc
            </value>
        </property>
    </bean>
    <!--2、添加securityManager定义-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
    </bean>
    <!--3、添加realm定义-->
    <bean id="myRealm" class="shiro.ShiroDbRealm"/>
</beans>